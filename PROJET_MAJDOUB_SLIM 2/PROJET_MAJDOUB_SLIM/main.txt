int main1(){
    srand(time(NULL));

    /* on teste la fonction init_keys */
    KEY* pKey = (KEY*)malloc(sizeof(KEY));
    KEY* sKey = (KEY*)malloc(sizeof(KEY));
    init_pair_keys(pKey,sKey,3,11);
    printf("pKey %lx, %lx \n",pKey->m,pKey->n);
    printf("sKey %lx, %lx \n",sKey->m,sKey->n);

    /* on teste str_to_key */

    char* c=(char*)key_to_str(pKey);
    printf("key_to_str: %s\n",c);
    KEY* key =str_to_key(c);
    printf("str_to_key: %lx, %lx \n",key->m,key->n);
    free(key); // pour eviter les fuites memoires 
    free(c);

    /* tests des signatures */
        // les cles candidates

    //KEY* pKeyc = (KEY*)malloc (sizeof(KEY));
    KEY* sKeyC = (KEY*)malloc (sizeof(KEY));
    init_pair_keys(pKey,sKeyC,3,11);

        /* Declaration */

    char* messS = key_to_str(pKey);
    char* k1=key_to_str(pKey);
    printf("%s vote pour %s \n", k1, messS);
    free(k1);
    SIGNATURE* s = sign(messS,sKey);
    printf("signature: ");
    print_long_vector(s->content, s->size);
    c = signature_to_str(s);
    printf("signature_to_str: %s \n", c);
    s = str_to_signature(c);
    free(c);
    printf("str_to_signature: ");
    print_long_vector(s->content, s->size);

    /* des des fonctions protected */
}


